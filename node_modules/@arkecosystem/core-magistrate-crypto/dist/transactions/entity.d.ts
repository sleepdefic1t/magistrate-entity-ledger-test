import { Utils as AppUtils } from "@arkecosystem/core-kernel";
import { Interfaces, Transactions, Utils } from "@arkecosystem/crypto";
import ByteBuffer from "bytebuffer";
import { EntityAction } from "../enums";
export declare class EntityTransaction extends Transactions.Transaction {
    static typeGroup: number;
    static type: number;
    static key: string;
    static version: number;
    protected static defaultStaticFee: Utils.BigNumber;
    protected static staticFeeByAction: {
        0: AppUtils.BigNumber;
        1: AppUtils.BigNumber;
        2: AppUtils.BigNumber;
    };
    static getSchema(): Transactions.schemas.TransactionSchema;
    static staticFee(feeContext?: {
        height?: number;
        data?: Interfaces.ITransactionData;
    }): Utils.BigNumber;
    serialize(): ByteBuffer;
    deserialize(buf: ByteBuffer): void;
}
